$tile-width: 140px;
$tile-height: 110px;

$border-width: 4px;
$grid-rows: 7;
$grid-columns: 8;

$move-distance-horizontal: $tile-width - $border-width;
$move-distance-vertical:  $tile-height - $border-width;

$container-margin: 20px;
$container-width: (($grid-columns - 1) * $tile-width) - (($grid-columns - 1) * $border-width);
$container-height: ($grid-rows * $tile-height) - ($grid-rows * $border-width);

$MUNCHER-INDEX: 1;
$BOARD-INDEX: 2;
$TROGGLE-INDEX: 3;
$MENU-INDEX: 4;
$LOADING-INDEX: 5;

@mixin container {
	$newHeight: $grid-rows - 1;

	width: $container-width;
	height: ($newHeight * $tile-height) - ($newHeight * $border-width);
	position: absolute;

	overflow: hidden;
}

@mixin emptyTileSize($width, $height) {
	width: $width;
	height: $height;
	vertical-align: top;
	border: 0 transparent;
}

@mixin transform($args...) {
	-webkit-transform: $args;
	   -moz-transform: $args;
			transform: $args;
}

@mixin transitionProperty {
	-webkit-transition: 200ms ease-in-out;
	   -moz-transition: 200ms ease-in-out;
			transition: 200ms ease-in-out;

	-webkit-transition-property: -webkit-transform;
	   -moz-transition-property: -moz-transform;
			transition-property: transform;
}


@keyframes loadingEven {
	0% { left: -$container-width; }
	25%, 75% { left: 0px; }
	100% { left: $container-width; }
}

@-moz-keyframes loadingEven{
	0% { left: -$container-width; }
	25%, 75% { left: 0px; }
	100% { left: $container-width; }
}

@-webkit-keyframes loadingEven {
	0% { left: -$container-width; }
	25%, 75% { left: 0px; }
	100% { left: $container-width; }
}

@-o-keyframes loadingEven {
	0% { left: -$container-width; }
	25%, 75% { left: 0px; }
	100% { left: $container-width; }
}

@-ms-keyframes loadingEven {
	0% { left: -$container-width; }
	25%, 75% { left: 0px; }
	100% { left: $container-width; }
}





@keyframes loadingOdd {
	0% { left: $container-width; }
	25%, 75% { left: 0px; }
	100% { left: -$container-width; }
}

@-moz-keyframes loadingOdd{
	0% { left: $container-width; }
	25%, 75% { left: 0px; }
	100% { left: -$container-width; }
}

@-webkit-keyframes loadingOdd {
	0% { left: $container-width; }
	25%, 75% { left: 0px; }
	100% { left: -$container-width; }
}

@-o-keyframes loadingOdd {
	0% { left: $container-width; }
	25%, 75% { left: 0px; }
	100% { left: -$container-width; }
}

@-ms-keyframes loadingOdd {
	0% { left: $container-width; }
	25%, 75% { left: 0px; }
	100% { left: -$container-width; }
}


* { box-sizing: border-box; }

body {
	width: $container-width;
	margin: 0 auto;
	color: white;
	background: black;
}

.main-screen {
	width: $container-width;
	height: $container-height;
	position: absolute;
	z-index: $MENU-INDEX;

	text-align: center;
	background-color: black;

	display: none;

	h1 {
		margin-top: 150px;
		font-size: 5em;
	}

	ul {
		width: ($container-width / 2);
		margin: 0 auto;
		font-size: 2em;
		list-style-type: none;

		li {
			margin-left: -$tile-width/2;

			&.selected {
				background-color: white;
				color: black;
			}
		}
	}
}

.loading-screen {
	@include transitionProperty;

	width: $container-width;
	height: $container-height;
	position: absolute;
	z-index: $LOADING-INDEX;
	overflow: hidden;

	$loading-height: (((($grid-rows - 0.5) * $tile-height) + (($grid-rows - 3) * $border-width))  / ($grid-rows * 2)) + $border-width;

	div {
		width: 100%;
		height: $loading-height;
		background-color: green;
		position: absolute;

		@for $i from 2 through (($grid-rows * 2) - 1) {
			&:nth-child(#{$i}) { 
				$marginTop: (($i - 1) * $loading-height);
				@if $i > ($grid-rows) {
					margin-top: $marginTop - 1px;
				} @else {
					margin-top: $marginTop;
				}
			}
		}
	}

	$load-time: 3s;

	.even {
		left: -$container-width;
		&.load {
			-webkit-animation: loadingEven linear $load-time;
			   -moz-animation: loadingEven linear $load-time;
				-ms-animation: loadingEven linear $load-time;
				 -o-animation: loadingEven linear $load-time;
					animation: loadingEven linear $load-time;
		}
	}

	.odd {
		left: $container-width;
		&.load {
			-webkit-animation: loadingOdd linear $load-time;
			   -moz-animation: loadingOdd linear $load-time;
				-ms-animation: loadingOdd linear $load-time;
				 -o-animation: loadingOdd linear $load-time;
					animation: loadingOdd linear $load-time;
		}
	}
}

.header {
	height: $tile-height;
	margin-bottom: 20px;
	margin-left: $tile-width/2;

	.level {
		display: inline-block;
		width: $tile-width - $border-width;
		text-align: center;
		margin-top: 30px;
		vertical-align: top;

		span {
			font-size: 20pt;
			display: block;
		}
	}
	.game-mode {
		display: inline-block;
		margin: 20px 0;

		width: (($grid-columns - 4) * $tile-width) - (($grid-columns - 3) * $border-width) -  $border-width;
		border-top: $border-width solid red;
		border-bottom: $border-width solid red;
		text-align: center;

		font-size: 15pt;
		line-height: 12pt;
	}
}


.game-container {
	@include container;
	margin-top: -$tile-height/2;
}

#grid {
	@include container;
	z-index: $BOARD-INDEX;

	.row {
		display:block;

		.tile {
			display: inline-block;
			position: relative;
			width: $tile-width;
			height: $tile-height;
			
			border: $border-width solid purple;

			margin-top: -$border-width;
			margin-left: -$border-width;
			vertical-align: top;

			.tile-inner {
				width: 80%;
				margin: 25% auto;
				text-align: center;
				font-size: 15pt;
				color: white;
			}

			&.emptyRow {
				@include emptyTileSize($tile-width, $tile-height/2);
			}

			&.emptyCol {
				@include emptyTileSize($tile-width/2, $tile-height);
			}

			&.emptyCorner {
				@include emptyTileSize($tile-width/2, $tile-height/2);
			}
		}
	}
}
/* .tile:before {
content: '';
position:absolute;
top:-3px;
left:-3px; 
height:106px;
width:106px;
background-color: white;
border-radius: 25px;
} */


#player-grid {
	@include container;
	z-index: $MUNCHER-INDEX;

	#muncher {
		position: absolute;
		width: $tile-width - (2 * $border-width);
		height: $tile-height - (2 * $border-width);
		background-color: red;

		@include transitionProperty;
	}
}

.enemy-grid {
	@include container;
	z-index: $TROGGLE-INDEX;

	#enemy1 {
		position: absolute;
		width: $tile-width - (2 * $border-width);
		height: $tile-height - (2 * $border-width);
		background-color: blue;

		@include transitionProperty;
	}
}

@for $x from 1 through $grid-columns {
	@for $y from 1 through $grid-rows {
		.position-#{$x}-#{$y} {
			$xPos: floor( ($x - 1) * $move-distance-horizontal) - ($tile-width/2);
			$yPos: floor( ($y - 1) * $move-distance-vertical) - ($tile-height/2);
			@include transform(translate($xPos, $yPos));
		}
	}
}

#extra-info {
	$newWidth: $grid-columns - 2;
	$newHeight: $grid-rows - 2;
	$height: ($newHeight * $tile-height) + ($newHeight * $border-width / 4);

	width: ($newWidth * $tile-width) - ($newWidth * $border-width);
	margin-top: $height;
	margin-left: ($tile-width / 2) - ($border-width * 2);

	font-size: 30pt;

	div:first-child {
		display: inline-block;
		width: $tile-width;
	}

	.score-container {
		display: inline-block;
		width: $tile-width * 1.5;
		border: $border-width solid blue;
		text-align: center;
	}
}