$tile-width: 140px;
$tile-height: 110px;

$border-width: 4px;
/*$grid-rows: 5;*/
/*$grid-columns: 6;*/
$grid-rows: 7;
$grid-columns: 8;

$move-distance-horizontal: $tile-width - $border-width;
$move-distance-vertical:  $tile-height - $border-width;

$container-margin: 20px;

@mixin container {
	$newWidth: $grid-columns - 1;
	$newHeight: $grid-rows - 1;

	width: ($newWidth * $tile-width) - ($newWidth * $border-width);
	height: ($newHeight * $tile-height) - ($newHeight * $border-width);
	position: absolute;

	margin-top: -$tile-height/2;
	overflow: hidden;
}

@mixin emptyTileSize($width, $height) {
	width: $width;
	height: $height;
	vertical-align: top;
	border: 0 transparent;
}

@mixin transform($args...) {
	-webkit-transform: $args;
	-moz-transform: $args;
	transform: $args;
}



* { box-sizing: border-box }

body {
	width: (($grid-columns - 1) * $tile-width) - (($grid-columns - 1) * $border-width);
	margin: 0 auto;
	color: white;
	background: black;
}

.header {
	height: $tile-height;
	margin-bottom: 20px;
	margin-left: $tile-width/2;

	.level {
		display: inline-block;
		width: $tile-width - $border-width;
		text-align: center;
		margin-top: 30px;
		vertical-align: top;

		span {
			font-size: 20pt;
			display: block;
		}
	}
	.game-mode {
		display: inline-block;
		margin: 20px 0;

		width: (($grid-columns - 4) * $tile-width) - (($grid-columns - 3) * $border-width) -  $border-width;
		border-top: $border-width solid red;
		border-bottom: $border-width solid red;
		text-align: center;

		font-size: 15pt;
		line-height: 12pt;
	}
}

/*.game-container {*/
#grid {
	@include container;

	z-index: 2;
	/*background-color: yellow;*/

	.row {
		display:block;

		.tile {
			display: inline-block;
			position: relative;
			/*z-index: 2;*/

			width: $tile-width;
			height: $tile-height;
			
			/*background-color: white;*/
			border: $border-width solid purple;

			margin-top: -$border-width;
			margin-left: -$border-width;
			vertical-align: top;

			.tile-inner {
				/*background-color: green;*/
				width: 80%;
				margin: 25% auto;
				text-align: center;
				font-size: 15pt;
				color: white;
			}

			&.emptyRow {
				@include emptyTileSize($tile-width, $tile-height/2);
			}

			&.emptyCol {
				@include emptyTileSize($tile-width/2, $tile-height);
			}

			&.emptyCorner {
				@include emptyTileSize($tile-width/2, $tile-height/2);
			}
		}
	}
}
/* .tile:before {
content: '';
position:absolute;
top:-3px;
left:-3px; 
height:106px;
width:106px;
background-color: white;
border-radius: 25px;
} */

#player-grid {
	@include container;
	/*background-color: blue;*/

	z-index: -1;

	#muncher {
		position: absolute;
		width: $tile-width - (2 * $border-width);
		height: $tile-height - (2 * $border-width);
		/*top: $border-width;*/
		background-color: red;

		-webkit-transition: 200ms ease-in-out;
		   -moz-transition: 200ms ease-in-out;
				transition: 200ms ease-in-out;

		-webkit-transition-property: -webkit-transform;
		   -moz-transition-property: -moz-transform;
				transition-property: transform;

		@for $x from 1 through $grid-columns {
			@for $y from 1 through $grid-rows {
				&.position-#{$x}-#{$y} {
					$xPos: floor( ($x - 1) * $move-distance-horizontal) - ($tile-width/2);
					$yPos: floor( ($y - 1) * $move-distance-vertical) - ($tile-height/2);
					@include transform(translate($xPos, $yPos));
				}
			}
		}
	}
}